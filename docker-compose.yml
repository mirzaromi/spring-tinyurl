version: "3.7"
services:

  # PostgreSQL Service
  postgres:
    image: postgres:12.12
    container_name: my-postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - ./postgres/data:/var/lib/postgresql/data  # Persistent volume for Postgres data
#      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql # Optional: for initialization scripts
    networks:
      - backend
    ports:
      - "5434:5432"
    restart: unless-stopped

  # Spring Boot Service (your application)
  springboot:
    build: .
    container_name: springboot
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://my-postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_REDIS_HOST: my-redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - postgres
    networks:
      - backend
    ports:
      - "8070:8080"
    restart: unless-stopped

  # Prometheus Service
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Your Prometheus config file
      - ./prometheus/data:/prometheus  # Persistent volume for Prometheus data
    ports:
      - "9090:9090"
    networks:
      - backend
    restart: unless-stopped

  # Grafana Service
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin  # Grafana admin password
    volumes:
      - ./grafana/data:/var/lib/grafana  # Persistent volume for Grafana data
      - ./grafana/dashboards:/var/lib/grafana/dashboards  # Optional: your custom dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: my-redis
    ports:
      - "6378:6379"  # Expose Redis on port 6379
    volumes:
      - ./redis/data:/data
    networks:
      - backend


networks:
  backend:
    driver: bridge
